var CONST_DIR = "Visto_nel_Web"

browser.tabs.query({'active': true, 'lastFocusedWindow': true}, function (tabs) {
	var url = tabs[0].url;
	var title = tabs[0].title;
	
	var x = document.getElementById("URL_TAB");
    x.value = url;
    var y = document.getElementById("TITLE_TAB");
    y.value = title;
});

document.addEventListener('DOMContentLoaded', function() {
  document.getElementById("SAVE").addEventListener("click", salva);
});


document.addEventListener('DOMContentLoaded', function() {
  document.getElementById("CATEGORY").addEventListener("change", show_hidden_category_input);
});

document.addEventListener('DOMContentLoaded', function() {
  document.getElementById("HASHTAG").addEventListener("change", show_hidden_hashtag_input);
});

function show_hidden_category_input(){
	var selected_category = document.getElementById("CATEGORY").value;
	if (selected_category == "NOT LISTED HERE"){
		document.getElementById("HIDDEN_CATEGORY").type = "text";
		document.getElementById("HIDDEN_CATEGORY").placeholder = "Inserisci qui la nuova categoria...";
	}
	else {
		document.getElementById("HIDDEN_CATEGORY").type = "hidden";
	}
	
}

function show_hidden_hashtag_input(){
	var selected_hashtag = document.getElementById("HASHTAG").value;
	if (selected_hashtag == "NOT LISTED HERE"){
		document.getElementById("HIDDEN_HASHTAG").type = "text";
		document.getElementById("HIDDEN_HASHTAG").placeholder = "Inserisci qui il nuovo hashtag...";
	}
	else {
		document.getElementById("HIDDEN_HASHTAG").type = "hidden";
	}
}

function exit_extension(){
	window.close();    //added because if I wrote <HERE> blob resource failed;
}

function onStartedDownload(id) {
}

function onFailed(error) {
}

function handleChanged(delta) {  //god bless https://developer.mozilla.org/en-US/Add-ons/WebExtensions/API/downloads/onChanged
  if (delta.state && delta.state.current === "complete") {
    window.close();
  }
}

function salva(){
	var d = new Date();
	var year = d.getFullYear();
	var month = d.getMonth(); //starts_with_zero
	var offset = d.getTimezoneOffset();
	var watermark = "Generated by CS PRIO30: for complaints cs.prio30p@gmail.com";
	var comment = document.getElementById('COMMENT').value;
	var titolo = document.getElementById('TITLE_TAB').value;
	var indirizzo = document.getElementById('URL_TAB').value;
	var hashtag = document.getElementById('HASHTAG').value;
	var category = document.getElementById('CATEGORY').value;
	
	if ( document.getElementById("HASHTAG").value == "NOT LISTED HERE"){
		hashtag = document.getElementById("HIDDEN_HASHTAG").value
	}
	
	if ( document.getElementById("CATEGORY").value == "NOT LISTED HERE"){
		category = document.getElementById("HIDDEN_CATEGORY").value
	}
	
	var debug = {WATERMARK: watermark,
				URL: indirizzo,
				TITLE: titolo,
				COMMENT: comment,
				DATE: d,
				TIME_MINUTES_OFFSET_BY_UTC: offset,
				HASHTAG: hashtag,
				CATEGORY: category};
    var blob = new Blob([JSON.stringify(debug, null, 2)], {type : 'application/json'});
    var urlDOWNLOAD = URL.createObjectURL(blob);
    var downloading = 	browser.downloads.download({
								url: urlDOWNLOAD,
								filename : CONST_DIR + "/" + "current" + "/Visto_nel_Web.txt"
						});
	downloading.then(onStartedDownload, onFailed);
	browser.downloads.onChanged.addListener(handleChanged);
	// <HERE> window.close();
}